#include "Piece.h"


using namespace NDChess;

Piece::ColorBit Piece::getColor() const {
	return (Piece::ColorBit)(data & COLOR_MASK);
}

Piece::PieceTypeBit Piece::getPieceType() const {
	return (Piece::PieceTypeBit)(data & PIECE_TYPE_MASK);
}

Piece::InCheckBit Piece::getInCheck() const {
	return (Piece::InCheckBit)(data & IN_CHECK_MASK);
}

/*Adapted from code generated by Google Gemini*/
void Piece::setColor(ColorBit color) {
	data = (data & ~COLOR_MASK) | color;
}

void Piece::setPieceType(PieceTypeBit type) {
	data = (data & ~PIECE_TYPE_MASK) | type;
}

void Piece::setInCheck(InCheckBit inCheck) {
	if (getPieceType() != KING) {
		return;
	}

	data = (data & ~IN_CHECK_MASK) | inCheck;
}